{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/models/node.model.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,sLAAsL,4BAA4B,4EAA4E,4BAA4B,qEAAqE,4BAA4B,2aAA2a,qDAAqD,8KAA8K,gBAAgB,iZAAiZ,aAAa,0FAA0F,yBAAyB,mSAAmS,iBAAiB,+EAA+E,6BAA6B,yDAAyD,wBAAwB,qLAAqL,6CAA6C,iVAAiV,2BAA2B,0FAA0F,gBAAgB,iBAAiB,iBAAiB,qDAAqD,2BAA2B,snBAAsnB,oCAAoC,2NAA2N,6CAA6C,iVAAiV,2BAA2B,qGAAqG,yBAAyB,mFAAmF,iBAAiB,mHAAmH,8BAA8B,oDAAoD,2BAA2B,2vB;;;;;;;;;;;ACArjJ,+DAA+D,+H;;;;;;;;;;;;;;;;;;ACAb;AACF;AAOhD;IALA;QAME,UAAK,GAAG,uBAAuB,CAAC;QAEhC,gBAAW,GAAG,CAAC,CAAC;QAEhB,iBAAY,GAAG,EAAE,CAAC;QAClB,SAAI,GAAG,IAAI,CAAC;IA6Hd,CAAC;IA3HC,+BAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,4DAAS,EAAE,CAAC;IAClC,CAAC;IAED,+BAAQ,GAAR,UAAS,QAAQ;QAAjB,iBASC;QARC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAM,YAAU,GAAe,IAAI,UAAU,EAAE,CAAC;YAChD,YAAU,CAAC,MAAM,GAAG,UAAC,CAAC;gBACpB,KAAI,CAAC,IAAI,CAAC,OAAO,GAAG,YAAU,CAAC,MAAM,CAAC;YACxC,CAAC,CAAC;YACF,YAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;IACH,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE;YAC1B,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,kCAAW,GAAX;QAAA,iBAmDC;QAlDC,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;QACpC,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC9C,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC9C,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACtC,WAAW,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;YAC9B,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC5B,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBACnB,IAAI,KAAK,KAAK,CAAC,EAAE;oBACf,KAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;iBACzC;qBAAM;oBACL,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;wBAC/B,KAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,EAAE,CAAC;wBAChC,KAAI,CAAC,mBAAmB,EAAE,CAAC;qBAC5B;oBACD,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,gBAAgB,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;iBAC5D;aACF;iBAAM,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACjD,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAE9B,KAAK,CAAC,OAAO,CAAC,cAAI;oBAChB,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;wBAC/B,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;4BACxB,KAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;yBAC1B;wBACD,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;4BACvB,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;yBACnC,CAAC,CAAC;qBACJ;gBACH,CAAC,CAAC,CAAC;aACJ;iBAAM,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;gBAC/E,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;gBAChC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,cAAI;oBAC1B,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;gBACH,OAAO,EAAE,CAAC;aACX;iBAAM,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,KAAI,CAAC,QAAQ,CAAC,YAAY,EAAE;gBAC9E,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAEhC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,EAAE;oBAC5C,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;iBAC9C;gBAED,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,IAAI,CAAC;oBAC3C,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC;oBAChB,eAAe,EAAE,OAAO,CAAC,CAAC,CAAC;oBAC3B,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;iBAClB,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAmB,GAAnB;QACE,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;YACpD,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;gBACpD,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE;oBAC3C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,aAAa,EAAE;wBAC1C,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,aAAa,GAAG,EAAE,CAAC;qBAC5C;oBACD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC;wBACzC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,QAAQ;wBACtC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;qBACxC,CAAC,CAAC;iBACJ;aACF;SACF;IACH,CAAC;IAED,0CAAmB,GAAnB;QAAA,iBA2BC;QA1BC,IAAI,CAAC,QAAQ,EAAE,CAAC;gCACP,CAAC;YACR,IAAM,OAAO,GAAG,OAAK,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;oCAElE,CAAC;gBACR,IAAI,OAAK,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,OAAO,EAAE;;iBAGhD;qBAAM;oBACL,IAAI,CAAC,OAAK,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,kBAAkB,EAAE;wBAClE,OAAK,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,CAAC,CAAC;wBAC7D,OAAK,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAG,CAAC,CAAC;qBACnE;oBAED,IAAI,OAAK,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;wBAC9B,OAAK,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,cAAI;4BAC/C,IAAI,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,IAAI,EAAE;gCACrD,4BAA4B;gCAC5B,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,aAAa,IAAI,IAAI,CAAC,IAAI,CAAC;gCACtE,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,kBAAkB,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;6BAChF;wBACH,CAAC,CAAC,CAAC;qBACJ;iBACF;;YAnBH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAK,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;sCAA1C,CAAC;;;aAoBT;;;QAvBH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE;oBAA9D,CAAC;SAwBT;IACH,CAAC;IAED,kCAAW,GAAX;QACE,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC3B,CAAC;IAlIU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,uIAAmC;;SAEpC,CAAC;OACW,YAAY,CAmIxB;IAAD,mBAAC;CAAA;AAnIwB;;;;;;;;;;;;;;;;;;;;ACRiC;AACjB;AAEM;AAY/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAVrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACftB;AAAA;AAAA;IAAA;IAqBA,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACrBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"nav-container mt-3\\\">\\n    <nav class=\\\"nav nav-pills nav-justified\\\">\\n      <a class=\\\"nav-item nav-link\\\" [ngClass]=\\\"{'active': currentStep === 0}\\\">Upload do arquivo</a>\\n      <a class=\\\"nav-item nav-link\\\" [ngClass]=\\\"{'active': currentStep === 1}\\\">Resultados</a>\\n      <a class=\\\"nav-item nav-link\\\" [ngClass]=\\\"{'active': currentStep === 2}\\\">Entregas</a>\\n    </nav>\\n  </div>\\n  <div class=\\\"content mt-5\\\">\\n    <div [hidden]=\\\"currentStep !== 0\\\">\\n      <h1>Upload do arquivo de configuração</h1>\\n      <div class=\\\"input-group mt-3\\\">\\n        <div class=\\\"custom-file\\\">\\n          <input type=\\\"file\\\" class=\\\"custom-file-input\\\" id=\\\"inputGroupFile04\\\" (change)=\\\"readFile($event)\\\">\\n          <label class=\\\"custom-file-label\\\" for=\\\"inputGroupFile04\\\">{{ file && file.name || 'Nenhum arquivo selecionado' }}</label>\\n        </div>\\n      </div>\\n      <div class=\\\"jumbotron mt-3\\\" *ngIf=\\\"file\\\">\\n        <h2>Está tudo correto?</h2>\\n        <hr class=\\\"my-4\\\">\\n        <pre>{{ file.content }}</pre>\\n        <div class=\\\"float-right\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"refreshPage()\\\">Deu zica, voltar.</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-success ml-2\\\" (click)=\\\"nextStep()\\\">Tudo certo, prosseguir!</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div [hidden]=\\\"currentStep !== 1\\\">\\n      <h1 *ngIf=\\\"file\\\">O arquivo {{ file.name }} gerou os seguintes resultados:</h1>\\n      <h3 *ngIf=\\\"nodeData.nodes\\\" class=\\\"mt-4\\\">{{ nodeData.nodes.length }} destinos</h3>\\n      <div *ngIf=\\\"nodeData.nodes && nodeData.nodes.length\\\" class=\\\"row mt-3\\\">\\n        <div *ngFor=\\\"let node of nodeData.nodes\\\" class=\\\"col-md-3\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">Destino: {{ node.nodeName }}</h5>\\n              <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Conectado a {{ node.connectToNode.length }} destinos.</h6>\\n              <code>\\n                {{ JSON.stringify(node) }}\\n              </code>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"nodeData.deliveryData\\\" class=\\\"mt-3\\\">\\n        <hr>\\n        <h3>{{ nodeData.deliveryData.destinations.length }} entregas</h3>\\n        <div *ngIf=\\\"nodeData.deliveryData.destinations.length\\\" class=\\\"row mt-3\\\">\\n          <div *ngFor=\\\"let deliver of nodeData.deliveryData.destinations\\\" class=\\\"col-md-3\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">Entrega ao destino: {{ deliver.destinationNode }}</h5>\\n                <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Iniciando do tempo : {{ deliver.time }} com bônus de: {{ deliver.bonus }}R$</h6>\\n                <code>\\n                  {{ JSON.stringify(deliver) }}\\n                </code>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body text-center\\\">\\n                <h5 class=\\\"card-title\\\">Cálculo das entregas</h5>\\n                <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"calculateDeliveries()\\\">Calcular</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"nodeData\\\" class=\\\"mt-3 mb-3\\\">\\n        <hr>\\n        <h1 class=\\\"mb-3\\\">Objeto completo</h1>\\n        <code>\\n          {{ JSON.stringify(nodeData, null, 2)}}\\n        </code>\\n      </div>\\n    </div>\\n    <div [hidden]=\\\"currentStep !== 2\\\">\\n      <h1 *ngIf=\\\"file\\\">Entregas a serem efetuadas</h1>\\n      <div *ngIf=\\\"nodeData.deliveryData\\\" class=\\\"mt-3\\\">\\n        <h3>{{ nodeData.deliveryData.destinations.length }} entregas</h3>\\n        <div *ngIf=\\\"nodeData.deliveryData.destinations.length\\\" class=\\\"row mt-3\\\">\\n          <div *ngFor=\\\"let deliver of nodeData.deliveryData.destinations\\\" class=\\\"col-md-3\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">Entrega ao destino: {{ deliver.destinationNode }}</h5>\\n                <h6 class=\\\"card-subtitle mb-2 text-muted\\\">Tempo de entrega até o destino: {{ deliver.timeToDeliver }}.</h6>\\n                <h6 class=\\\"card-subtitle mb-2 text-muted\\\">O bônus foi: {{ deliver.bonus }}R$.</h6>\\n                <h6 class=\\\"card-subtitle mb-2 text-muted\\\">O tempo total da entrega(ida + volta) foi: {{ deliver.totalTimeToDeliver }}.</h6>\\n                <code>\\n                  {{ JSON.stringify(deliver) }}\\n                </code>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body text-center\\\">\\n                <h5 class=\\\"card-title\\\">Deseja iniciar novamente o algoritmo?</h5>\\n                <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"refreshPage()\\\">Recomeçar</button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"w-100 mt-3 text-center\\\">\\n            <h2>Selo de aferição do algoritmo</h2>\\n            <img src=\\\"https://blogfuxicodosertao.com.br/wp-content/uploads/2018/04/unnamed.gif\\\" class=\\\"pb-2\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { NodeModel } from './models/node.model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'Analise de Algoritmos';\n  file;\n  currentStep = 0;\n  nodeData;\n  destinations = [];\n  JSON = JSON;\n\n  ngOnInit() {\n    this.nodeData = new NodeModel();\n  }\n\n  readFile(fileList) {\n    this.file = fileList.target.files[0];\n    if (this.file) {\n      const fileReader: FileReader = new FileReader();\n      fileReader.onload = (e) => {\n        this.file.content = fileReader.result;\n      };\n      fileReader.readAsText(this.file);\n    }\n  }\n\n  nextStep() {\n    if (this.currentStep === 0) {\n      this.createNodes();\n    }\n    this.currentStep++;\n  }\n\n  createNodes() {\n    let fileContent = this.file.content;\n    let counter = 0;\n    fileContent = fileContent.replace(/‘/g, '\\'');\n    fileContent = fileContent.replace(/’/g, '\\'');\n    fileContent = fileContent.split('\\n');\n    fileContent.forEach((data, index) => {\n      if (data.trim().length === 1) {\n        data = data.trim();\n        if (index === 0) {\n          this.nodeData.nodeLength = Number(data);\n        } else {\n          if (!this.nodeData.deliveryData) {\n            this.nodeData.deliveryData = {};\n            this.setNodesConnections();\n          }\n          this.nodeData.deliveryData.deliveriesLength = Number(data);\n        }\n      } else if (data.length > 1 && data.includes('\\'')) {\n        const nodes = data.split(',');\n\n        nodes.forEach(node => {\n          if (!this.nodeData.deliveryData) {\n            if (!this.nodeData.nodes) {\n              this.nodeData.nodes = [];\n            }\n            this.nodeData.nodes.push({\n              nodeName: node.replace(/\\'/gi, '')\n            });\n          }\n        });\n      } else if (data.length > 1 && data.includes(',') && !this.nodeData.deliveryData) {\n        this.destinations[counter] = [];\n        data.split(',').forEach(item => {\n          this.destinations[counter].push(item);\n        });\n        counter++;\n      } else if (data.length > 1 && data.includes(',') && this.nodeData.deliveryData) {\n        const deliver = data.split(',');\n\n        if (!this.nodeData.deliveryData.destinations) {\n          this.nodeData.deliveryData.destinations = [];\n        }\n\n        this.nodeData.deliveryData.destinations.push({\n          time: deliver[0],\n          destinationNode: deliver[1],\n          bonus: deliver[2]\n        });\n      }\n    });\n  }\n\n  setNodesConnections() {\n    for (let d1 = 0; d1 < this.destinations.length; d1++) {\n      for (let d2 = 0; d2 < this.destinations.length; d2++) {\n        if (Number(this.destinations[d1][d2]) !== 0) {\n          if (!this.nodeData.nodes[d1].connectToNode) {\n            this.nodeData.nodes[d1].connectToNode = [];\n          }\n          this.nodeData.nodes[d1].connectToNode.push({\n            node: this.nodeData.nodes[d2].nodeName,\n            time: Number(this.destinations[d1][d2])\n          });\n        }\n      }\n    }\n  }\n\n  calculateDeliveries() {\n    this.nextStep();\n    for (let i = 0; i < this.nodeData.deliveryData.destinations.length; i++) {\n      const destiny = this.nodeData.deliveryData.destinations[i].destinationNode;\n\n      for (let y = 0; y < this.nodeData.nodes.length; y++) {\n        if (this.nodeData.nodes[y].nodeName === destiny) {\n          // cheguei\n          break;\n        } else {\n          if (!this.nodeData.deliveryData.destinations[i].totalTimeToDeliver) {\n            this.nodeData.deliveryData.destinations[i].timeToDeliver = 0;\n            this.nodeData.deliveryData.destinations[i].totalTimeToDeliver = 0;\n          }\n\n          if (this.nodeData.nodes[y + 1]) {\n            this.nodeData.nodes[y].connectToNode.forEach(node => {\n              if (this.nodeData.nodes[y + 1].nodeName === node.node) {\n                // x2 já contabiliza a volta\n                this.nodeData.deliveryData.destinations[i].timeToDeliver += node.time;\n                this.nodeData.deliveryData.destinations[i].totalTimeToDeliver += node.time * 2;\n              }\n            });\n          }\n        }\n      }\n    }\n  }\n\n  refreshPage() {\n    window.location.reload();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class NodeModel {\r\n  nodeLength: number;\r\n  nodes: Array<{\r\n    nodeName: string,\r\n    connectToNode: Array<{\r\n      node: string,\r\n      time: number\r\n    }>,\r\n    distance: number\r\n  }>;\r\n  deliveryData: {\r\n    deliveryStartPoint: string,\r\n    deliveriesLength: number,\r\n    destinations: Array<{\r\n      time: number,\r\n      destinationNode: string,\r\n      bonus: number,\r\n      timeToDeliver: number,\r\n      totalTimeToDeliver: number\r\n    }>\r\n  };\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}